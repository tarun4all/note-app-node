{"version":3,"sources":["store.js","config.js","apiService.js","Note.js","Home.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["AppStateContext","React","createContext","openNotificationWithIcon","type","message","description","notification","AppStateProvider","children","useState","loader","SetLoader","useEffect","setTimeout","state","SetMessage","title","msg","SetError","Provider","value","className","tip","spinning","constants","STATIC_BASE_URL","BASE_URL","POST","CREATE_NOTE","GET","GET_NOTE","instance","axios","create","baseURL","Note","useContext","content","setContent","noteId","useParams","a","apiService","get","catch","err","data","success","fetchData","theme","Home","changeSaveClick","makeApiCall","setValue","console","log","post","_id","onChange","Navbar","saveClick","location","useLocation","saveEnabled","setSaveEnabled","pathname","avatar","src","subTitle","extra","onClick","App","save","setSave","clicked","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64a9761d.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Spin, notification } from 'antd';\nimport \"./context.css\";\n\nexport const AppStateContext = React.createContext(null);\n\nconst openNotificationWithIcon = (type, message, description) => {\n    notification[type]({\n        message,\n        description\n    });\n};\n\nexport default function AppStateProvider({ children }) {\n    const [loader, SetLoader] = React.useState(false);\n\n    const successMessage = (title, msg) => {\n        openNotificationWithIcon('success', title, msg);\n    }\n\n    const errorMessage = (title, msg) => {\n        openNotificationWithIcon('error', title, msg);\n    }\n\n    useEffect(() => {\n        if (loader) setTimeout(() => { SetLoader(false) }, 5000);\n    }, [loader]);\n\n    const state = {\n        SetMessage: successMessage,\n        SetError: errorMessage,\n        SetLoader: SetLoader,\n    };\n\n    return (\n        <AppStateContext.Provider value={state}>\n            <Spin className=\"overlay\" tip=\"Loading...\" spinning={loader}></Spin>\n            {children}\n        </AppStateContext.Provider>\n    );\n}","const constants = {\n    STATIC_BASE_URL: \"http://localhost:3000\",\n    BASE_URL: \"http://localhost:3002/api\",\n    POST: {\n        CREATE_NOTE: \"/create\"\n    },\n    GET: {\n        GET_NOTE: \"/note\"\n    }\n}\n\nexport default constants;","import axios from 'axios';\nimport constants from './config';\n\nconst instance = axios.create({\n    baseURL: constants.BASE_URL\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react';\nimport apiService from './apiService';\nimport {\n    useParams,\n} from \"react-router-dom\";\nimport constants from \"./config\";\nimport ReactQuill from 'react-quill';\nimport { AppStateContext } from './store';\n\nfunction Note() {\n    const { SetMessage, SetError, SetLoader } = React.useContext(AppStateContext);\n    const [content, setContent] = useState('');\n    const { noteId } = useParams();\n\n    useEffect(() => {\n        async function fetchData() {\n            const { data } = await apiService.get(`${constants.GET.GET_NOTE}/${noteId}`).catch(err => { return {} });\n\n            if (data && data.success) {\n                setContent(data.data);\n            } else {\n                SetError(\"Invalid Request\");\n            }\n            return data;\n        }\n\n        fetchData();\n    }, [noteId]);\n\n    return (\n        <div className=\"row\">\n            <ReactQuill className=\"editor\" theme=\"snow\" value={content} />\n        </div>\n    )\n}\n\nexport default Note","import React, { useState, useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport constants from \"./config\";\nimport apiService from './apiService';\nimport { AppStateContext } from './store';\n\nfunction Home({ changeSaveClick, makeApiCall }) {\n    const { SetMessage, SetError, SetLoader } = React.useContext(AppStateContext);\n    const [value, setValue] = useState('');\n\n    useEffect(() => {\n        if (makeApiCall) {\n            async function fetchData() {\n                console.log(value);\n                const { data } = await apiService.post(constants.POST.CREATE_NOTE, { content: value }).catch(err => { return {} });\n\n                if (data && data.success) {\n                    console.log(`Please access note at ${constants.STATIC_BASE_URL}/note/${data._id}`);\n                    SetMessage('Note Created Successfully', `Please access note at ${constants.STATIC_BASE_URL}/note/${data._id}`);\n                } else {\n                    SetError(\"Invalid request\");\n                }\n                return data;\n            }\n\n            fetchData();\n            changeSaveClick();\n        }\n    }, [makeApiCall]);\n\n    return (\n        <ReactQuill className=\"editor\" theme=\"snow\" value={value} onChange={setValue} />\n    );\n}\n\nexport default Home","import React, { useState } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport {\n    useLocation\n} from \"react-router-dom\";\nimport { PageHeader, Button } from 'antd';\n\nfunction Navbar({ saveClick }) {\n    const location = useLocation();\n    const [saveEnabled, setSaveEnabled] = useState(false);\n\n    React.useEffect(() => {\n        setSaveEnabled(location.pathname == '/' && true);\n    }, [location]);\n\n    return (\n        <PageHeader\n            className=\"site-page-header\"\n            avatar={{ src: 'https://avatars1.githubusercontent.com/u/8186664?s=460&v=4' }}\n            title=\"Note App\"\n            subTitle=\"Live Notepad\"\n            extra={[\n                saveEnabled && <Button key=\"1\" type=\"primary\" onClick={() => saveClick(true)}>\n                    Save Note\n                </Button>\n            ]}\n        />\n    );\n}\n\nexport default Navbar;","import React, { useState } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport AppStateProvider from \"./store\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport Note from \"./Note\";\nimport Home from \"./Home\";\nimport Navbar from './Navbar';\n\nfunction App() {\n  const [save, setSave] = useState(false);\n\n  function saveClick(clicked = false) {\n    setSave(clicked);\n  }\n\n  return (\n    <Router>\n      <AppStateProvider>\n        <div className=\"app\">\n          <Navbar saveClick={saveClick} />\n          <div className=\"main\">\n            <Switch>\n              <Route path=\"/\" exact>\n                <Home changeSaveClick={saveClick} makeApiCall={save} />\n              </Route>\n              <Route path=\"/note\" exact>\n                <Home />\n              </Route>\n              <Route path=\"/note/:noteId\">\n                <Note />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </AppStateProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}